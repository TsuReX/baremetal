source [find target/swj-dp.tcl]
source [find mem_helper.tcl]

if { [info exists CHIPNAME] } {
   set _CHIPNAME $CHIPNAME
} else {
   set _CHIPNAME stm32f4x
}

if { [info exists JTAG_TAPID] } {
	set _JTAG_TAPID $JTAG_TAPID
} else {
	set _JTAG_TAPID 0x10caa02b
}

if { [info exists SWD_TAPID] } {
	set _SWD_TAPID $SWD_TAPID
} else {
	set _SWD_TAPID 0x2ba01477
}

if { [using_jtag] } {
	set _TAPID $_JTAG_TAPID
} else {
	set _TAPID $_SWD_TAPID
}

set _WORKAREASIZE $WORKAREASIZE

swj_newdap $_CHIPNAME cpu -irlen 5 -ircapture 0x1 -irmask 0x1f ;#-expected-id $_TAPID

if {[using_jtag]} {
   jtag newtap $_CHIPNAME bs -irlen 5
}

target create $_CHIPNAME.cpu cortex_m -chain-position $_CHIPNAME.cpu

$_CHIPNAME.cpu configure -work-area-phys 0x20000000 \
							-work-area-size $_WORKAREASIZE -work-area-backup 0

#set _FLASHNAME $_CHIPNAME.flash
#flash bank $_FLASHNAME stm32f2x 0 0 0 0 $_CHIPNAME.cpu

adapter_khz 2000

targets $_CHIPNAME.cpu
scan_chain

adapter_nsrst_delay 1000
if {[using_jtag]} {
 jtag_ntrst_delay 1000
}

reset_config srst_nogate

if {![using_hla]} {
#   # if srst is not fitted use SYSRESETREQ to
#   # perform a soft reset
   cortex_m reset_config sysresetreq
}

#$_CHIPNAME.cpu configure -event examine-end {
#	# Enable debug during low power modes (uses more power)
#	# DBGMCU_CR |= DBG_STANDBY | DBG_STOP | DBG_SLEEP
#	mmw 0xE0042004 0x00000007 0
#
#	# Stop watchdog counters during halt
#	# DBGMCU_APB1_FZ |= DBG_IWDG_STOP | DBG_WWDG_STOP
#	mmw 0xE0042008 0x00001800 0
#}

#$_CHIPNAME.cpu configure -event trace-config {
#	# Set TRACE_IOEN; TRACE_MODE is set to async; when using sync
#	# change this value accordingly to configure trace pins
#	# assignment
#	mmw 0xE0042004 0x00000020 0
#}

$_CHIPNAME.cpu configure -event reset-init {
#	# Configure PLL to boost clock to HSI x 4 (64 MHz)
	mww 0x40023804 0x08012008   ;# RCC_PLLCFGR 16 Mhz /8 (M) * 128 (N) /4(P)
	mww 0x40023C00 0x00000102   ;# FLASH_ACR = PRFTBE | 2(Latency)
	mmw 0x40023800 0x01000000 0 ;# RCC_CR |= PLLON
	sleep 10                    ;# Wait for PLL to lock
	mmw 0x40023808 0x00001000 0 ;# RCC_CFGR |= RCC_CFGR_PPRE1_DIV2
	mmw 0x40023808 0x00000002 0 ;# RCC_CFGR |= RCC_CFGR_SW_PLL
#
#	# Boost JTAG frequency
	adapter_khz 8000
	echo RESET_INIT
}

$_CHIPNAME.cpu configure -event reset-start {
#	# Reduce speed since CPU speed will slow down to 16MHz with the reset
#	adapter_khz 2000
	echo RESET_START
}
