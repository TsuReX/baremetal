source [find target/swj-dp.tcl]
source [find mem_helper.tcl]

adapter_khz 4000

set _CHIPNAME lpc546xx
set _WORKAREASIZE 0x2000

if {[using_swd]} {
	set _TAPID 0x2ba01477
	swd newdap $_CHIPNAME cpu -expected-id $_TAPID
}

if {[using_jtag]} {
	set _TAPID 0x10caa02b
	jtag newtap $_CHIPNAME cpu -irlen 5 -expected-id $_TAPID
}

target create $_CHIPNAME.cpu cortex_m -chain-position $_CHIPNAME.cpu

$_CHIPNAME.cpu configure -work-area-phys 0x20010000 -work-area-size $_WORKAREASIZE -work-area-backup 0

$_CHIPNAME.cpu configure -event examine-end {

	echo !!!examine-end!!!
}

$_CHIPNAME.cpu configure -event trace-config {

	echo !!trace-config!!
}

$_CHIPNAME.cpu configure -event reset-init {

	echo !!!reset-init!!!
}

$_CHIPNAME.cpu configure -event reset-start {

	echo !!!reset-start!!!
}

cortex_m reset_config vectreset

targets

proc load_prog {prog_file prog_addr prog_entry image_file} {

	# RAM block 16Kb
	set block_size		0x10000;
	set ram_image_addr	0x20010000;
	set flash_image_addr	0x00000000;
	# TODO: Evaluate image size
	set image_size		0x1000;
	set stack_base		0x2000F000;
	set op_status		0x20001800;

	# Enable clocks for all SRAM banks
	mww 0x40000220 0x38 1

	mwb $prog_addr 0x00 $block_size

	load_image $prog_file $prog_addr
	sleep 1000

	echo "Fill by zero RAM block for image."
	mwb $ram_image_addr 0xA5 $image_size
	mdw $ram_image_addr 0x10

	load_image $image_file $ram_image_addr

	# Set arguments for loader
	reg r0 $ram_image_addr
	reg r1 $flash_image_addr
	reg r2 $image_size

	# set loader entry point and stack base
	reg pc $prog_entry
	reg sp $stack_base
	# reg lr $prog_entry

	# Run loader
	resume
	# TODO Waiting time must be depenent of loading completion
	sleep 2000

	echo "Flash programming status"
	mdw $op_status

	# At this point MCU should be reset and run program from flash
	# halt
	exit
}

add_usage_text load_prog "prog_file prog_addr prog_entry image_file"
add_help_text load_prog "Loading flash programmer into memory"

proc do {action} {
	echo "ECHO $action"
	if {$action=="debug"} {
		init
		reset halt

	} elseif {$action=="flash"} {
		init
		reset halt
		load_prog flash_programmer.bin 0x20000000 0x20000570 flash_programmer.bin
	} else {
		init
		echo "Select action: debug or flash"
		exit
	}
}

add_usage_text do "action"
add_help_text do "Select action to do: debug, flash."
